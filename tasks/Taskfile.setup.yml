version: '3'

tasks:
  # ============================================================================
  # PROJECT SETUP & INITIALIZATION
  # ============================================================================

  install-deps:
    silent: true
    desc: Install all project dependencies
    cmds:
      - npm install

  setup-env:
    silent: true
    desc: Set up environment variables
    cmds:
      - |
        if [ ! -f .env.local ]; then
          cp env.example .env.local
          echo "⚠️  Please update .env.local with your actual values"
        fi

  setup-supabase:
    silent: true
    desc: Initialize and start Supabase locally
    deps: [install-supabase-cli]
    cmds:
      - supabase start --exclude vector

  install-supabase-cli:
    silent: true
    desc: Install Supabase CLI if not already installed
    cmds:
      - |
        if ! command -v supabase &> /dev/null; then
          if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install supabase/tap/supabase
          elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
            curl -fsSL https://supabase.com/install.sh | sh
          else
            echo "❌ Unsupported OS. Please install Supabase CLI manually: https://supabase.com/docs/guides/cli"
            exit 1
          fi
        fi

  fix-docker-auth:
    silent: true
    desc: Fix Docker authentication issues for Supabase
    cmds:
      - |
        docker logout public.ecr.aws || true
        echo "💡 If Supabase still fails, try: docker login public.ecr.aws" 